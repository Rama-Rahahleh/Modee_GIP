//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GIP.Corporation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyPermit_Result", Namespace="http://schemas.datacontract.org/2004/07/SSC.Entities")]
    [System.SerializableAttribute()]
    public partial class CompanyPermit_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GIP.Corporation.CompanyPermit[] CompanyPermit_ArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GIP.Corporation.CompanyPermit[] CompanyPermit_Array {
            get {
                return this.CompanyPermit_ArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyPermit_ArrayField, value) != true)) {
                    this.CompanyPermit_ArrayField = value;
                    this.RaisePropertyChanged("CompanyPermit_Array");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyPermit", Namespace="http://schemas.datacontract.org/2004/07/SSC.Entities")]
    [System.SerializableAttribute()]
    public partial class CompanyPermit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComitCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanySSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebitBalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsDebitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComitCode {
            get {
                return this.ComitCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ComitCodeField, value) != true)) {
                    this.ComitCodeField = value;
                    this.RaisePropertyChanged("ComitCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIDField, value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanySSN {
            get {
                return this.CompanySSNField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanySSNField, value) != true)) {
                    this.CompanySSNField = value;
                    this.RaisePropertyChanged("CompanySSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DebitBalance {
            get {
                return this.DebitBalanceField;
            }
            set {
                if ((object.ReferenceEquals(this.DebitBalanceField, value) != true)) {
                    this.DebitBalanceField = value;
                    this.RaisePropertyChanged("DebitBalance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsDebit {
            get {
                return this.IsDebitField;
            }
            set {
                if ((object.ReferenceEquals(this.IsDebitField, value) != true)) {
                    this.IsDebitField = value;
                    this.RaisePropertyChanged("IsDebit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CorporationBasicInfo_Result", Namespace="http://schemas.datacontract.org/2004/07/SSC.Entities")]
    [System.SerializableAttribute()]
    public partial class CorporationBasicInfo_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GIP.Corporation.CorporationBasicInfo[] CorporationBasicInfo_ArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GIP.Corporation.CorporationBasicInfo[] CorporationBasicInfo_Array {
            get {
                return this.CorporationBasicInfo_ArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.CorporationBasicInfo_ArrayField, value) != true)) {
                    this.CorporationBasicInfo_ArrayField = value;
                    this.RaisePropertyChanged("CorporationBasicInfo_Array");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDescription {
            get {
                return this.StatusDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescriptionField, value) != true)) {
                    this.StatusDescriptionField = value;
                    this.RaisePropertyChanged("StatusDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CorporationBasicInfo", Namespace="http://schemas.datacontract.org/2004/07/SSC.Entities")]
    [System.SerializableAttribute()]
    public partial class CorporationBasicInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BranchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MainActivatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostOfficeBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalSalariesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Branch {
            get {
                return this.BranchField;
            }
            set {
                if ((object.ReferenceEquals(this.BranchField, value) != true)) {
                    this.BranchField = value;
                    this.RaisePropertyChanged("Branch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyAddress {
            get {
                return this.CompanyAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyAddressField, value) != true)) {
                    this.CompanyAddressField = value;
                    this.RaisePropertyChanged("CompanyAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIDField, value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyStatus {
            get {
                return this.CompanyStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyStatusField, value) != true)) {
                    this.CompanyStatusField = value;
                    this.RaisePropertyChanged("CompanyStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainActivates {
            get {
                return this.MainActivatesField;
            }
            set {
                if ((object.ReferenceEquals(this.MainActivatesField, value) != true)) {
                    this.MainActivatesField = value;
                    this.RaisePropertyChanged("MainActivates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalNumber {
            get {
                return this.NationalNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalNumberField, value) != true)) {
                    this.NationalNumberField = value;
                    this.RaisePropertyChanged("NationalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostOfficeBox {
            get {
                return this.PostOfficeBoxField;
            }
            set {
                if ((object.ReferenceEquals(this.PostOfficeBoxField, value) != true)) {
                    this.PostOfficeBoxField = value;
                    this.RaisePropertyChanged("PostOfficeBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalSalaries {
            get {
                return this.TotalSalariesField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalSalariesField, value) != true)) {
                    this.TotalSalariesField = value;
                    this.RaisePropertyChanged("TotalSalaries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Corporation.ICorporationServices")]
    public interface ICorporationServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorporationServices/GetCompanyPermit", ReplyAction="http://tempuri.org/ICorporationServices/GetCompanyPermitResponse")]
        GIP.Corporation.CompanyPermit_Result GetCompanyPermit(string corporationInsuranceNo, string corporationNationalNo, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorporationServices/GetCompanyPermit", ReplyAction="http://tempuri.org/ICorporationServices/GetCompanyPermitResponse")]
        System.Threading.Tasks.Task<GIP.Corporation.CompanyPermit_Result> GetCompanyPermitAsync(string corporationInsuranceNo, string corporationNationalNo, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorporationServices/GetCorporationBasicInfo", ReplyAction="http://tempuri.org/ICorporationServices/GetCorporationBasicInfoResponse")]
        GIP.Corporation.CorporationBasicInfo_Result GetCorporationBasicInfo(string corporationInsuranceNo, string corporationNatNo, string corporationName, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICorporationServices/GetCorporationBasicInfo", ReplyAction="http://tempuri.org/ICorporationServices/GetCorporationBasicInfoResponse")]
        System.Threading.Tasks.Task<GIP.Corporation.CorporationBasicInfo_Result> GetCorporationBasicInfoAsync(string corporationInsuranceNo, string corporationNatNo, string corporationName, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICorporationServicesChannel : GIP.Corporation.ICorporationServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CorporationServicesClient : System.ServiceModel.ClientBase<GIP.Corporation.ICorporationServices>, GIP.Corporation.ICorporationServices {
        
        public CorporationServicesClient() {
        }
        
        public CorporationServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CorporationServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CorporationServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CorporationServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GIP.Corporation.CompanyPermit_Result GetCompanyPermit(string corporationInsuranceNo, string corporationNationalNo, string username) {
            return base.Channel.GetCompanyPermit(corporationInsuranceNo, corporationNationalNo, username);
        }
        
        public System.Threading.Tasks.Task<GIP.Corporation.CompanyPermit_Result> GetCompanyPermitAsync(string corporationInsuranceNo, string corporationNationalNo, string username) {
            return base.Channel.GetCompanyPermitAsync(corporationInsuranceNo, corporationNationalNo, username);
        }
        
        public GIP.Corporation.CorporationBasicInfo_Result GetCorporationBasicInfo(string corporationInsuranceNo, string corporationNatNo, string corporationName, string username) {
            return base.Channel.GetCorporationBasicInfo(corporationInsuranceNo, corporationNatNo, corporationName, username);
        }
        
        public System.Threading.Tasks.Task<GIP.Corporation.CorporationBasicInfo_Result> GetCorporationBasicInfoAsync(string corporationInsuranceNo, string corporationNatNo, string corporationName, string username) {
            return base.Channel.GetCorporationBasicInfoAsync(corporationInsuranceNo, corporationNatNo, corporationName, username);
        }
    }
}
